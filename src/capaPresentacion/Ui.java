package capaPresentacion;

//Se importa toda la capa logica.
import capaLogica.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import java.util.ArrayList;
//Librerias swing comboBox
import javax.swing.RowFilter;
//Se importa librerias swing de la tabla.
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class Ui extends javax.swing.JFrame {

    static Clinica miClinica = new Clinica();

    public Ui() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        contenedorPrincipal = new javax.swing.JPanel();
        iuRegistrarClinica = new javax.swing.JPanel();
        labelTituloIngresarClinica = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        labelCedulaJurudica = new javax.swing.JLabel();
        txtCedulaJudirica = new javax.swing.JTextField();
        labelDireccion = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        labelTelefono = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        btnRegistrarClinica = new javax.swing.JButton();
        outputMensaje = new javax.swing.JLabel();
        iuListarClinica = new javax.swing.JPanel();
        labelListarClinica = new javax.swing.JLabel();
        jComboBoxFiltroClinica = new javax.swing.JComboBox<>();
        labelBuscarClinica = new javax.swing.JLabel();
        txtFiltroClinica = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblClinica = new javax.swing.JTable();
        iuRegistrarPacientes = new javax.swing.JPanel();
        labelTituloIngresarPacientes = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        labelNombrePaciente = new javax.swing.JLabel();
        txtNombrePaciente = new javax.swing.JTextField();
        labelCedula = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        labelDireccionPaciente = new javax.swing.JLabel();
        txtDireccionPaciente = new javax.swing.JTextField();
        labelEmail = new javax.swing.JLabel();
        txtEmailPaciente = new javax.swing.JTextField();
        labelTelefonoPciente = new javax.swing.JLabel();
        txtTelefonoPaciente = new javax.swing.JTextField();
        outputMensajePacientes = new javax.swing.JLabel();
        btnRegistrarPacientes = new javax.swing.JButton();
        iuListarPacientes = new javax.swing.JPanel();
        labelListarPacientes = new javax.swing.JLabel();
        jComboBoxFiltroPacientes = new javax.swing.JComboBox<>();
        labelBuscarPacientes = new javax.swing.JLabel();
        txtFiltroPacientes = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPacientes = new javax.swing.JTable();
        iuRegistrarMedico = new javax.swing.JPanel();
        labelTituloIngresarMedicos = new javax.swing.JLabel();
        label = new javax.swing.JPanel();
        labelCodigoMedico = new javax.swing.JLabel();
        txtCodigoMedico = new javax.swing.JTextField();
        labelNombreMedico = new javax.swing.JLabel();
        txtNombreMedico = new javax.swing.JTextField();
        labelCedulaMedico = new javax.swing.JLabel();
        txtCedulaMedico = new javax.swing.JTextField();
        labelEmailMedico = new javax.swing.JLabel();
        txtEmailMedico = new javax.swing.JTextField();
        labelEspecialidadMedico = new javax.swing.JLabel();
        txtEspecializacionMedico = new javax.swing.JTextField();
        labelTelefonoMedico = new javax.swing.JLabel();
        txtTelefonoMedico = new javax.swing.JTextField();
        outputMensajeMedico = new javax.swing.JLabel();
        btnRegistrarMedico = new javax.swing.JButton();
        iuListarMedico = new javax.swing.JPanel();
        labelListarMedico = new javax.swing.JLabel();
        jComboBoxFiltroMedico = new javax.swing.JComboBox<>();
        labelBuscarMedico = new javax.swing.JLabel();
        txtFiltroMedico = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblMedico = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        btnClinica = new javax.swing.JMenu();
        btnAgregarClinica = new javax.swing.JMenu();
        btnListarClinica = new javax.swing.JMenu();
        btnPacientes = new javax.swing.JMenu();
        btnRegistrarPaciente = new javax.swing.JMenu();
        btnListarPacientes = new javax.swing.JMenu();
        btnMedico = new javax.swing.JMenu();
        btnAgregarMedico = new javax.swing.JMenu();
        btnListarTienda = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        jMenuItem1.setText("jMenuItem1");

        jMenu3.setText("jMenu3");

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        contenedorPrincipal.setLayout(new java.awt.CardLayout());

        iuRegistrarClinica.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        iuRegistrarClinica.setForeground(new java.awt.Color(255, 255, 255));

        labelTituloIngresarClinica.setText("Ingresar clinica.");

        labelNombre.setText("Nombre:");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        labelCedulaJurudica.setText("Cédula jurídica:");

        txtCedulaJudirica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaJudiricaActionPerformed(evt);
            }
        });

        labelDireccion.setText("Direccion:");

        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });

        labelTelefono.setText("Teléfono:");

        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });

        btnRegistrarClinica.setText("Registrar");
        btnRegistrarClinica.setToolTipText("");
        btnRegistrarClinica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrarClinicaMouseClicked(evt);
            }
        });
        btnRegistrarClinica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarClinicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(outputMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(btnRegistrarClinica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(266, 266, 266))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelDireccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelCedulaJurudica))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(179, 179, 179)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCedulaJudirica, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(74, 74, 74))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCedulaJudirica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCedulaJurudica))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDireccion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTelefono))
                .addGap(47, 47, 47)
                .addComponent(outputMensaje)
                .addGap(18, 18, 18)
                .addComponent(btnRegistrarClinica)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout iuRegistrarClinicaLayout = new javax.swing.GroupLayout(iuRegistrarClinica);
        iuRegistrarClinica.setLayout(iuRegistrarClinicaLayout);
        iuRegistrarClinicaLayout.setHorizontalGroup(
            iuRegistrarClinicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuRegistrarClinicaLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(labelTituloIngresarClinica)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iuRegistrarClinicaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        iuRegistrarClinicaLayout.setVerticalGroup(
            iuRegistrarClinicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuRegistrarClinicaLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(labelTituloIngresarClinica)
                .addGap(78, 78, 78)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        contenedorPrincipal.add(iuRegistrarClinica, "card2");

        iuListarClinica.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        iuListarClinica.setForeground(new java.awt.Color(255, 255, 255));

        labelListarClinica.setText("Lista clinicas.");

        jComboBoxFiltroClinica.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Cédula Juridica" }));
        jComboBoxFiltroClinica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFiltroClinicaActionPerformed(evt);
            }
        });

        labelBuscarClinica.setText("Buscar:");

        txtFiltroClinica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroClinicaKeyTyped(evt);
            }
        });

        tblClinica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cédula Juridica", "Dirección", "Teléfono"
            }
        ));
        jScrollPane5.setViewportView(tblClinica);

        javax.swing.GroupLayout iuListarClinicaLayout = new javax.swing.GroupLayout(iuListarClinica);
        iuListarClinica.setLayout(iuListarClinicaLayout);
        iuListarClinicaLayout.setHorizontalGroup(
            iuListarClinicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuListarClinicaLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(iuListarClinicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iuListarClinicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelListarClinica)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iuListarClinicaLayout.createSequentialGroup()
                        .addComponent(jComboBoxFiltroClinica, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelBuscarClinica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFiltroClinica, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );
        iuListarClinicaLayout.setVerticalGroup(
            iuListarClinicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuListarClinicaLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(labelListarClinica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(iuListarClinicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltroClinica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBuscarClinica)
                    .addComponent(jComboBoxFiltroClinica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        contenedorPrincipal.add(iuListarClinica, "card2");

        iuRegistrarPacientes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        iuRegistrarPacientes.setForeground(new java.awt.Color(255, 255, 255));

        labelTituloIngresarPacientes.setText("Ingresar pacientes.");

        labelNombrePaciente.setText("Nombre completo:");

        txtNombrePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombrePacienteActionPerformed(evt);
            }
        });

        labelCedula.setText("Cédula:");

        txtCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaActionPerformed(evt);
            }
        });

        labelDireccionPaciente.setText("Dirección:");

        txtDireccionPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionPacienteActionPerformed(evt);
            }
        });

        labelEmail.setText("Correo electrónico:");

        txtEmailPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailPacienteActionPerformed(evt);
            }
        });

        labelTelefonoPciente.setText(" Teléfono:");

        btnRegistrarPacientes.setText("Registrar");
        btnRegistrarPacientes.setToolTipText("");
        btnRegistrarPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrarPacientesMouseClicked(evt);
            }
        });
        btnRegistrarPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarPacientesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(btnRegistrarPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(266, 266, 266))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(outputMensajePacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(labelCedula)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(labelNombrePaciente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDireccionPaciente)
                            .addComponent(labelEmail)
                            .addComponent(labelTelefonoPciente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmailPaciente)
                            .addComponent(txtDireccionPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(txtTelefonoPaciente))))
                .addGap(74, 74, 74))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNombrePaciente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCedula))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccionPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDireccionPaciente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTelefonoPciente)
                    .addComponent(txtTelefonoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(outputMensajePacientes)
                .addGap(18, 18, 18)
                .addComponent(btnRegistrarPacientes)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout iuRegistrarPacientesLayout = new javax.swing.GroupLayout(iuRegistrarPacientes);
        iuRegistrarPacientes.setLayout(iuRegistrarPacientesLayout);
        iuRegistrarPacientesLayout.setHorizontalGroup(
            iuRegistrarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuRegistrarPacientesLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(labelTituloIngresarPacientes)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iuRegistrarPacientesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        iuRegistrarPacientesLayout.setVerticalGroup(
            iuRegistrarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuRegistrarPacientesLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(labelTituloIngresarPacientes)
                .addGap(78, 78, 78)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        contenedorPrincipal.add(iuRegistrarPacientes, "card2");

        iuListarPacientes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        iuListarPacientes.setForeground(new java.awt.Color(255, 255, 255));

        labelListarPacientes.setText("Lista pacientes");

        jComboBoxFiltroPacientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cédula", "Nombre" }));
        jComboBoxFiltroPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFiltroPacientesActionPerformed(evt);
            }
        });

        labelBuscarPacientes.setText("Buscar:");

        txtFiltroPacientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroPacientesKeyTyped(evt);
            }
        });

        tblPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cédula", "Nombre", "Dirección", "Email", "Teléfono"
            }
        ));
        jScrollPane3.setViewportView(tblPacientes);
        if (tblPacientes.getColumnModel().getColumnCount() > 0) {
            tblPacientes.getColumnModel().getColumn(3).setHeaderValue("Email");
        }

        javax.swing.GroupLayout iuListarPacientesLayout = new javax.swing.GroupLayout(iuListarPacientes);
        iuListarPacientes.setLayout(iuListarPacientesLayout);
        iuListarPacientesLayout.setHorizontalGroup(
            iuListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuListarPacientesLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(iuListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iuListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelListarPacientes)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iuListarPacientesLayout.createSequentialGroup()
                        .addComponent(jComboBoxFiltroPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelBuscarPacientes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFiltroPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );
        iuListarPacientesLayout.setVerticalGroup(
            iuListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuListarPacientesLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(labelListarPacientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(iuListarPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltroPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBuscarPacientes)
                    .addComponent(jComboBoxFiltroPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        contenedorPrincipal.add(iuListarPacientes, "card2");

        iuRegistrarMedico.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        iuRegistrarMedico.setForeground(new java.awt.Color(255, 255, 255));

        labelTituloIngresarMedicos.setText("Ingresar medicos.");

        labelCodigoMedico.setText("Código:");

        labelNombreMedico.setText("Nombre completo:");

        txtNombreMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreMedicoActionPerformed(evt);
            }
        });

        labelCedulaMedico.setText("Cédula:");

        txtCedulaMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaMedicoActionPerformed(evt);
            }
        });

        labelEmailMedico.setText("Correo electrónico:");

        txtEmailMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailMedicoActionPerformed(evt);
            }
        });

        labelEspecialidadMedico.setText("Especialidad: ");

        txtEspecializacionMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEspecializacionMedicoActionPerformed(evt);
            }
        });

        labelTelefonoMedico.setText(" Teléfono:");

        btnRegistrarMedico.setText("Registrar");
        btnRegistrarMedico.setToolTipText("");
        btnRegistrarMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrarMedicoMouseClicked(evt);
            }
        });
        btnRegistrarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarMedicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout labelLayout = new javax.swing.GroupLayout(label);
        label.setLayout(labelLayout);
        labelLayout.setHorizontalGroup(
            labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(labelLayout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(btnRegistrarMedico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(266, 266, 266))
            .addGroup(labelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(outputMensajeMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(labelLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(labelLayout.createSequentialGroup()
                        .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelEspecialidadMedico)
                            .addComponent(labelEmailMedico)
                            .addComponent(labelTelefonoMedico)
                            .addComponent(labelCedulaMedico))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCedulaMedico, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtEmailMedico)
                                .addComponent(txtEspecializacionMedico, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                .addComponent(txtTelefonoMedico))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, labelLayout.createSequentialGroup()
                        .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNombreMedico)
                            .addComponent(labelCodigoMedico))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombreMedico, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(txtCodigoMedico))))
                .addGap(74, 74, 74))
        );
        labelLayout.setVerticalGroup(
            labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(labelLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodigoMedico, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCodigoMedico, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombreMedico)
                    .addComponent(txtNombreMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCedulaMedico)
                    .addComponent(txtCedulaMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmailMedico)
                    .addComponent(txtEmailMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEspecializacionMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEspecialidadMedico))
                .addGap(22, 22, 22)
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTelefonoMedico)
                    .addComponent(txtTelefonoMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(outputMensajeMedico)
                .addGap(17, 17, 17)
                .addComponent(btnRegistrarMedico)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout iuRegistrarMedicoLayout = new javax.swing.GroupLayout(iuRegistrarMedico);
        iuRegistrarMedico.setLayout(iuRegistrarMedicoLayout);
        iuRegistrarMedicoLayout.setHorizontalGroup(
            iuRegistrarMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuRegistrarMedicoLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(labelTituloIngresarMedicos)
                .addContainerGap(482, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iuRegistrarMedicoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        iuRegistrarMedicoLayout.setVerticalGroup(
            iuRegistrarMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuRegistrarMedicoLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(labelTituloIngresarMedicos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        contenedorPrincipal.add(iuRegistrarMedico, "card2");

        iuListarMedico.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        iuListarMedico.setForeground(new java.awt.Color(255, 255, 255));

        labelListarMedico.setText("Lista medico.");

        jComboBoxFiltroMedico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Nombre", "Cédula", "" }));

        labelBuscarMedico.setText("Buscar:");

        txtFiltroMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroMedicoActionPerformed(evt);
            }
        });
        txtFiltroMedico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroMedicoKeyTyped(evt);
            }
        });

        tblMedico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "Cédula", "Email", "Especialidad", "Teléfono"
            }
        ));
        jScrollPane4.setViewportView(tblMedico);

        javax.swing.GroupLayout iuListarMedicoLayout = new javax.swing.GroupLayout(iuListarMedico);
        iuListarMedico.setLayout(iuListarMedicoLayout);
        iuListarMedicoLayout.setHorizontalGroup(
            iuListarMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuListarMedicoLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(iuListarMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iuListarMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelListarMedico)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iuListarMedicoLayout.createSequentialGroup()
                        .addComponent(jComboBoxFiltroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelBuscarMedico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFiltroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );
        iuListarMedicoLayout.setVerticalGroup(
            iuListarMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iuListarMedicoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(labelListarMedico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(iuListarMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBuscarMedico)
                    .addComponent(jComboBoxFiltroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        contenedorPrincipal.add(iuListarMedico, "card2");

        btnClinica.setText("Clinica");

        btnAgregarClinica.setText("Registrar");
        btnAgregarClinica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarClinicaMouseClicked(evt);
            }
        });
        btnClinica.add(btnAgregarClinica);

        btnListarClinica.setText("Listar");
        btnListarClinica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListarClinicaMouseClicked(evt);
            }
        });
        btnClinica.add(btnListarClinica);

        jMenuBar1.add(btnClinica);

        btnPacientes.setText("Pacientes");

        btnRegistrarPaciente.setText("Registrar");
        btnRegistrarPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrarPacienteMouseClicked(evt);
            }
        });
        btnPacientes.add(btnRegistrarPaciente);

        btnListarPacientes.setText("Listar");
        btnListarPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListarPacientesMouseClicked(evt);
            }
        });
        btnPacientes.add(btnListarPacientes);

        jMenuBar1.add(btnPacientes);

        btnMedico.setText("Medico");

        btnAgregarMedico.setText("Registrar");
        btnAgregarMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMedicoMouseClicked(evt);
            }
        });
        btnMedico.add(btnAgregarMedico);

        btnListarTienda.setText("Listar");
        btnListarTienda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListarTiendaMouseClicked(evt);
            }
        });
        btnMedico.add(btnListarTienda);

        jMenuBar1.add(btnMedico);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contenedorPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contenedorPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(73, 73, 73))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Mostrar vista registro clinica
    private void btnAgregarClinicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarClinicaMouseClicked
        contenedorPrincipal.removeAll();
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();

        //agregar el nuevo panel
        contenedorPrincipal.add(iuRegistrarClinica);
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();
    }//GEN-LAST:event_btnAgregarClinicaMouseClicked
    
    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed
    
    //Registrar clinica
    private void btnRegistrarClinicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarClinicaMouseClicked
        String nombreClinica;
        String cedulaJudirica;
        String direccionClinica;
        String telefonoClinica;
        

        try {
            if (validarFormularioRegistroClnica() == true) {

                outputMensaje.setText("Llene los espacios en blanco");

            }else {
                nombreClinica = txtNombre.getText();
                cedulaJudirica = txtCedulaJudirica.getText();
                direccionClinica = txtDireccion.getText();
                telefonoClinica = txtTelefono.getText();
                miClinica.registrarClinica(nombreClinica, cedulaJudirica, direccionClinica, telefonoClinica);
                txtNombre.setText("");
                txtCedulaJudirica.setText("");
                txtDireccion.setText("");
                txtTelefono.setText("");
                outputMensaje.setText("La clinica ha sido agregada");  
            }

        } catch (Exception ex) {
            outputMensaje.setText("La clinica no ha sido agregada, ocurrió el siguiente error " + ex.getMessage());
            //JOptionPane.showMessageDialog(this,(String) ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRegistrarClinicaMouseClicked

    private void btnRegistrarClinicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarClinicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistrarClinicaActionPerformed

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void txtCedulaJudiricaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaJudiricaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaJudiricaActionPerformed
    
    //Mostrar vista registro pacientes
    private void btnRegistrarPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarPacienteMouseClicked
        contenedorPrincipal.removeAll();
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();

        //agregar el nuevo panel
        contenedorPrincipal.add(iuRegistrarPacientes);
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();
    }//GEN-LAST:event_btnRegistrarPacienteMouseClicked
    
    //Mostrar vista tabla pacientes
    private void btnListarPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListarPacientesMouseClicked
        contenedorPrincipal.removeAll();
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();

        //agregar el nuevo panel
        contenedorPrincipal.add(iuListarPacientes);
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();
        mostrarTablaPaciente();
    }//GEN-LAST:event_btnListarPacientesMouseClicked
    
    //Motrar vista medico
    private void btnAgregarMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMedicoMouseClicked
        contenedorPrincipal.removeAll();
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();

        //agregar el nuevo panel
        contenedorPrincipal.add(iuRegistrarMedico);
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();
    }//GEN-LAST:event_btnAgregarMedicoMouseClicked
    
    //Mostrar vista tabla medico
    private void btnListarTiendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListarTiendaMouseClicked
        contenedorPrincipal.removeAll();
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();

        //agregar el nuevo panel
        contenedorPrincipal.add(iuListarMedico);
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();
        mostrarTablaMedico();
    }//GEN-LAST:event_btnListarTiendaMouseClicked

    private void txtNombrePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombrePacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombrePacienteActionPerformed

    private void txtCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaActionPerformed

    private void txtDireccionPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionPacienteActionPerformed
    
    //Registrar Pacientes.
    private void btnRegistrarPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarPacientesMouseClicked

        String nombreCompleto;
        String cedula;
        String direccion;
        String email;
        String telefono;

        try {
            if (validarFormularioRegistroPacientes() == true) {

                outputMensajePacientes.setText("Llene los espacios en blanco");

            } else {
                nombreCompleto = txtNombrePaciente.getText().toUpperCase();
                cedula = txtCedula.getText().toUpperCase();
                direccion = txtDireccionPaciente.getText().toUpperCase();
                email = txtEmailPaciente.getText().toUpperCase();
                telefono = txtTelefonoPaciente.getText().toUpperCase();
                
                miClinica.registrarPacientes(nombreCompleto, cedula, direccion, email, telefono);
                txtNombrePaciente.setText("");
                txtCedula.setText("");
                txtDireccionPaciente.setText("");
                txtEmailPaciente.setText("");
                txtTelefonoPaciente.setText("");
                outputMensajePacientes.setText("El paciente ha sido agregado");
            }

        } catch (Exception ex) {
            outputMensajePacientes.setText("El paciente no ha sido agregado, ocurrió el siguiente error " + ex.getMessage());
        }
    }//GEN-LAST:event_btnRegistrarPacientesMouseClicked

    private void btnRegistrarPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarPacientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistrarPacientesActionPerformed
            
       
  
    private TableRowSorter trsFiltroPacientes;
    private TableRowSorter trsFiltroMedicos;
    private TableRowSorter trsFiltroClinicas;
    private void txtFiltroPacientesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroPacientesKeyTyped
        // TODO add your handling code here:
        txtFiltroPacientes.addKeyListener(new KeyAdapter() {
            
            public void keyReleased(final KeyEvent e) {
                
                String cadenaPaciente = (txtFiltroPacientes.getText().toUpperCase());
                txtFiltroPacientes.setText(cadenaPaciente);
                repaint();
                filtroPacientes();
            }
        });
        trsFiltroPacientes = new TableRowSorter(tblPacientes.getModel());
        tblPacientes.setRowSorter(trsFiltroPacientes);
    }//GEN-LAST:event_txtFiltroPacientesKeyTyped

    private void txtEmailPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailPacienteActionPerformed

    private void jComboBoxFiltroPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFiltroPacientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxFiltroPacientesActionPerformed

    private void txtFiltroMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltroMedicoActionPerformed

    private void txtFiltroMedicoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroMedicoKeyTyped
        
        txtFiltroMedico.addKeyListener(new KeyAdapter() {
            
            public void keyReleased(final KeyEvent e) {
                
                String cadenaMedico = (txtFiltroMedico.getText().toUpperCase());
                txtFiltroMedico.setText(cadenaMedico);
                repaint();
                filtroMedico();
            }
        });
        trsFiltroMedicos = new TableRowSorter(tblMedico.getModel());
        tblMedico.setRowSorter(trsFiltroMedicos);
    }//GEN-LAST:event_txtFiltroMedicoKeyTyped

    private void txtNombreMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreMedicoActionPerformed

    private void txtCedulaMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaMedicoActionPerformed

    private void txtEspecializacionMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEspecializacionMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEspecializacionMedicoActionPerformed

    private void txtEmailMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailMedicoActionPerformed
    
    //Registro medicos
    private void btnRegistrarMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMedicoMouseClicked
        
        String codigo;
        String nombreCompletoMedico;
        String cedula;
        String emailMedico;
        String especializacion;
        String telefono;


        try {
            if (validarFormularioRegistroMedico() == true) {

                outputMensajeMedico.setText("Llene los espacios en blanco");

            } else {
                codigo = txtCodigoMedico.getText().toUpperCase();
                nombreCompletoMedico = txtNombreMedico.getText().toUpperCase();
                cedula = txtCedulaMedico.getText().toUpperCase();
                emailMedico = txtEmailMedico.getText().toUpperCase();
                especializacion = txtEspecializacionMedico.getText().toUpperCase();
                telefono = txtTelefonoMedico.getText().toUpperCase();
                miClinica.registrarMedico(codigo, nombreCompletoMedico, cedula, emailMedico, especializacion, telefono);
                txtCodigoMedico.setText("");
                txtNombreMedico.setText("");
                txtCedulaMedico.setText("");
                txtEmailMedico.setText("");
                txtEspecializacionMedico.setText("");
                txtTelefonoMedico.setText("");
                outputMensajeMedico.setText("El medico(@) ha sido agregado");
            }

        } catch (Exception ex) {
            outputMensajeMedico.setText("El medico(@) no ha sido agregado, ocurrió el siguiente error " + ex.getMessage());
        }
    }//GEN-LAST:event_btnRegistrarMedicoMouseClicked

    private void btnRegistrarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistrarMedicoActionPerformed
    
    //Mostrar pacientes en tabla
    private void mostrarTablaClinica() {
        limpiarTablaClinica();
        DefaultTableModel model = (DefaultTableModel) tblClinica.getModel();
        ArrayList<Clinica> listaClinica = miClinica.getListaClinica();
        Object rowData[] = new Object[4];
        for (int i = 0; i < listaClinica.size(); i++) {
            rowData[0] = listaClinica.get(i).getNombreClinica();
            rowData[1] = listaClinica.get(i).getCedulaJudirica();
            rowData[2] = listaClinica.get(i).getDireccionClinica();
            rowData[3] = listaClinica.get(i).getTelefonoClinica();
            model.addRow(rowData);
            
        }
        System.out.println("\n");
        System.out.println(listaClinica.toString() + "\n");
        System.out.println("\n" + "***********************");
    }
    
    //Limpiar tabla pacientes
    private void limpiarTablaClinica() {
        DefaultTableModel model = (DefaultTableModel) tblClinica.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    
    
    private void jComboBoxFiltroClinicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFiltroClinicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxFiltroClinicaActionPerformed

    private void txtFiltroClinicaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroClinicaKeyTyped
        
        txtFiltroClinica.addKeyListener(new KeyAdapter() {
            
            public void keyReleased(final KeyEvent e) {
                
                String cadenaClinica = (txtFiltroClinica.getText().toUpperCase());
                txtFiltroClinica.setText(cadenaClinica);
                repaint();
                filtroClinica();
            }
        });
        trsFiltroClinicas = new TableRowSorter(tblClinica.getModel());
        tblClinica.setRowSorter(trsFiltroClinicas);
    }//GEN-LAST:event_txtFiltroClinicaKeyTyped

    private void btnListarClinicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListarClinicaMouseClicked
        contenedorPrincipal.removeAll();
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();

        //agregar el nuevo panel
        contenedorPrincipal.add(iuListarClinica);
        contenedorPrincipal.repaint();
        contenedorPrincipal.revalidate();
        mostrarTablaClinica();
    }//GEN-LAST:event_btnListarClinicaMouseClicked
    
    
    //Filtro pacientes
    public void filtroPacientes() {
        int columnaABuscar = 0;
        if (jComboBoxFiltroPacientes.getSelectedItem() == "Cédula") {
            columnaABuscar = 0;
        }
        if (jComboBoxFiltroPacientes.getSelectedItem() == "Nombre") {
            columnaABuscar = 1;
        }
        
        trsFiltroPacientes.setRowFilter(RowFilter.regexFilter(txtFiltroPacientes.getText(), columnaABuscar));
    }
    
    //Filtro medicos
    public void filtroMedico() {
        int columnaABuscar = 0;
        if (jComboBoxFiltroMedico.getSelectedItem() == "Código") {
            columnaABuscar = 0;
        }
        if (jComboBoxFiltroMedico.getSelectedItem() == "Nombre") {
            columnaABuscar = 1;
        }
        
        if (jComboBoxFiltroMedico.getSelectedItem() == "Cédula") {
            columnaABuscar = 2;
        }
        
        trsFiltroMedicos.setRowFilter(RowFilter.regexFilter(txtFiltroMedico.getText(), columnaABuscar));
    }
    
    //Filtro clinica
    public void filtroClinica() {
        int columnaABuscar = 0;
        if (jComboBoxFiltroClinica.getSelectedItem() == "Nombre") {
            columnaABuscar = 0;
        }
        
        if (jComboBoxFiltroClinica.getSelectedItem() == "Cédula Judirica") {
            columnaABuscar = 1;
        }
        
        trsFiltroClinicas.setRowFilter(RowFilter.regexFilter(txtFiltroClinica.getText(), columnaABuscar));
    }
   
    //Mostrar pacientes en tabla
    private void mostrarTablaPaciente() {
        limpiarTablaPacientes();
        DefaultTableModel model = (DefaultTableModel) tblPacientes.getModel();
        ArrayList<Paciente> listaPaciente = miClinica.getListaPaciente();
        Object rowData[] = new Object[5];
        for (int i = 0; i < listaPaciente.size(); i++) {
            rowData[0] = listaPaciente.get(i).getNombreCompleto();
            rowData[1] = listaPaciente.get(i).getCedula();
            rowData[2] = listaPaciente.get(i).getDireccion();
            rowData[3] = listaPaciente.get(i).getEmail();
            rowData[4] = listaPaciente.get(i).getTelefono();
            model.addRow(rowData);
            
        }
        System.out.println("\n");
        System.out.println(listaPaciente.toString() + "\n");
    }
    
    //Limpiar tabla pacientes
    private void limpiarTablaPacientes() {
        DefaultTableModel model = (DefaultTableModel) tblPacientes.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    
    //Mostrar Medico en tabla
    private void mostrarTablaMedico() {
        limpiarTablaMedico();
        DefaultTableModel model = (DefaultTableModel) tblMedico.getModel();
        ArrayList<Medico> listaMedico = miClinica.getListaMedico();
        Object rowData[] = new Object[6];
        for (int i = 0; i < listaMedico.size(); i++) {
            rowData[0] = listaMedico.get(i).getCodigo();
            rowData[1] = listaMedico.get(i).getNombreCompletoMedico();
            rowData[2] = listaMedico.get(i).getCedula();
            rowData[3] = listaMedico.get(i).getEmailMedico();
            rowData[4] = listaMedico.get(i).getEspecializacion();
            rowData[5] = listaMedico.get(i).getTelefono();
            model.addRow(rowData);
            
        }
        System.out.println("\n" + "*****************************" + "\n");
        System.out.println(listaMedico.toString() + "\n");
        System.out.println("\n");
    }
    
    //Limpiar tabla medico
    private void limpiarTablaMedico() {
        DefaultTableModel model = (DefaultTableModel) tblMedico.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    
    
    //Validamos el formulario Clinica
    /**
     * 
     * @return error
     */
    private Boolean validarFormularioRegistroClnica() {
        String nombreClinica;
        String cedulaJudirica;
        String direccionClinica;
        String telefonoClinica;
        boolean error = false;
        
        nombreClinica = txtNombre.getText();
        cedulaJudirica = txtCedulaJudirica.getText();
        direccionClinica = txtDireccion.getText();
        telefonoClinica = txtTelefono.getText();
        

        if (nombreClinica.equals("") || cedulaJudirica.equals("") || direccionClinica.equals("") || telefonoClinica.equals("")) {
            error = true;
        }
        return error;

    }
    
    //Validamos formulario paciente
    /**
     * 
     * @return error
     */
    private Boolean validarFormularioRegistroPacientes() {
        String nombreCompleto;
        String cedula;
        String direccion;
        String email;
        String telefono;
        boolean error = false;
        
        nombreCompleto = txtNombrePaciente.getText();
        cedula = txtCedula.getText();
        direccion = txtDireccionPaciente.getText();
        email = txtEmailPaciente.getText();
        telefono = txtTelefonoPaciente.getText();
        
        if (nombreCompleto.equals("") || cedula.equals("") || direccion.equals("") || email.equals("") || telefono.equals("")) {
            error = true;
        }
        return error;

    }
    
    //Validamos formulario medico
    /**
     * 
     * @return error
     */
    private Boolean validarFormularioRegistroMedico() {
        String codigo;
        String nombreCompletoMedico;
        String cedula;
        String emailMedico;
        String especializacion;
        String telefono;
        boolean error = false;
        
        codigo = txtCodigoMedico.getText();
        nombreCompletoMedico = txtNombreMedico.getText();
        cedula = txtCedulaMedico.getText();
        emailMedico = txtEmailMedico.getText();
        especializacion = txtEspecializacionMedico.getText();
        telefono = txtTelefonoMedico.getText();
        
        if (codigo.equals("") || nombreCompletoMedico.equals("") || cedula.equals("") || emailMedico.equals("") || especializacion.equals("") || telefono.equals("")) {
            error = true;
        }
        return error;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ui().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu btnAgregarClinica;
    private javax.swing.JMenu btnAgregarMedico;
    private javax.swing.JMenu btnClinica;
    private javax.swing.JMenu btnListarClinica;
    private javax.swing.JMenu btnListarPacientes;
    private javax.swing.JMenu btnListarTienda;
    private javax.swing.JMenu btnMedico;
    private javax.swing.JMenu btnPacientes;
    private javax.swing.JButton btnRegistrarClinica;
    private javax.swing.JButton btnRegistrarMedico;
    private javax.swing.JMenu btnRegistrarPaciente;
    private javax.swing.JButton btnRegistrarPacientes;
    private javax.swing.JPanel contenedorPrincipal;
    private javax.swing.JPanel iuListarClinica;
    private javax.swing.JPanel iuListarMedico;
    private javax.swing.JPanel iuListarPacientes;
    private javax.swing.JPanel iuRegistrarClinica;
    private javax.swing.JPanel iuRegistrarMedico;
    private javax.swing.JPanel iuRegistrarPacientes;
    private javax.swing.JComboBox<String> jComboBoxFiltroClinica;
    private javax.swing.JComboBox<String> jComboBoxFiltroMedico;
    private javax.swing.JComboBox<String> jComboBoxFiltroPacientes;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel label;
    private javax.swing.JLabel labelBuscarClinica;
    private javax.swing.JLabel labelBuscarMedico;
    private javax.swing.JLabel labelBuscarPacientes;
    private javax.swing.JLabel labelCedula;
    private javax.swing.JLabel labelCedulaJurudica;
    private javax.swing.JLabel labelCedulaMedico;
    private javax.swing.JLabel labelCodigoMedico;
    private javax.swing.JLabel labelDireccion;
    private javax.swing.JLabel labelDireccionPaciente;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelEmailMedico;
    private javax.swing.JLabel labelEspecialidadMedico;
    private javax.swing.JLabel labelListarClinica;
    private javax.swing.JLabel labelListarMedico;
    private javax.swing.JLabel labelListarPacientes;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelNombreMedico;
    private javax.swing.JLabel labelNombrePaciente;
    private javax.swing.JLabel labelTelefono;
    private javax.swing.JLabel labelTelefonoMedico;
    private javax.swing.JLabel labelTelefonoPciente;
    private javax.swing.JLabel labelTituloIngresarClinica;
    private javax.swing.JLabel labelTituloIngresarMedicos;
    private javax.swing.JLabel labelTituloIngresarPacientes;
    private javax.swing.JLabel outputMensaje;
    private javax.swing.JLabel outputMensajeMedico;
    private javax.swing.JLabel outputMensajePacientes;
    private javax.swing.JTable tblClinica;
    private javax.swing.JTable tblMedico;
    private javax.swing.JTable tblPacientes;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCedulaJudirica;
    private javax.swing.JTextField txtCedulaMedico;
    private javax.swing.JTextField txtCodigoMedico;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDireccionPaciente;
    private javax.swing.JTextField txtEmailMedico;
    private javax.swing.JTextField txtEmailPaciente;
    private javax.swing.JTextField txtEspecializacionMedico;
    private javax.swing.JTextField txtFiltroClinica;
    private javax.swing.JTextField txtFiltroMedico;
    private javax.swing.JTextField txtFiltroPacientes;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreMedico;
    private javax.swing.JTextField txtNombrePaciente;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTelefonoMedico;
    private javax.swing.JTextField txtTelefonoPaciente;
    // End of variables declaration//GEN-END:variables

}
